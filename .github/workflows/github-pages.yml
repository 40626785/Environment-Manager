name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, feature/github-pages ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install DocFX
        run: dotnet tool install -g docfx

      - name: Setup DocFX Templates
        run: |
          mkdir -p templates
          git clone --depth 1 https://github.com/dotnet/docfx.git docfx-source
          cp -r docfx-source/templates/default templates/custom
          cp -r docfx-source/templates/docfx.vendor.minified templates/
          rm -rf docfx-source
          mkdir -p images
          # Create a simple logo
          echo '<svg width="100" height="100" xmlns="http://www.w3.org/2000/svg"><rect width="100" height="100" fill="#2c5aa0"/><text x="10" y="60" font-family="Arial" font-size="24" fill="white">EM</text></svg>' > images/logo.svg
          # Use convert from ImageMagick to create a PNG from SVG
          convert images/logo.svg images/logo.png || echo "SVG conversion failed, using placeholder"
          # Create a placeholder if conversion failed
          if [ ! -f images/logo.png ]; then
            echo "Creating placeholder logo.png"
            convert -size 100x100 xc:blue -fill white -gravity center -pointsize 24 -annotate 0 "EM" images/logo.png || echo "Failed to create logo.png"
          fi

      - name: Create articles directory if it doesn't exist
        run: mkdir -p articles

      - name: Build Documentation
        run: docfx docfx.json

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 